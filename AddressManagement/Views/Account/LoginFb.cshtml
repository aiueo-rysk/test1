@model LoginFbViewModel
@{
    ViewData["Title"] = "FaceBookログイン";
}

<script>
    window.fbAsyncInit = function () {
        FB.init({
            appId: '513360539150232',
            cookie: true,
            xfbml: true,
            version: 'v3.2'
        });

        FB.AppEvents.logPageView();

    };

    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) { return; }
        js = d.createElement(s); js.id = id;
        js.src = "https://connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
</script>

<h2>@ViewData["Title"]</h2>
<div class="row">
    <div class="col-md-12">
        <section>
            <form asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">
                <h4>FaceBookアカウントでログインする</h4>

                <p>
                    <fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
                    </fb:login-button>
                </p>

                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="UserID"></label>
                    <input asp-for="UserID" class="form-control" readonly />
                </div>
                <div class="form-group">
                    <label asp-for="Email"></label>
                    <input asp-for="Email" class="form-control" readonly />
                </div>
                <div class="form-group">
                    <label asp-for="Name"></label>
                    <input asp-for="Name" class="form-control" readonly />
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-info">ログイン</button>
                    <button type="reset" class="btn btn-default" onclick="fclogout()">クリア</button>
                </div>

            </form>
        </section>
    </div>
</div>


<script>

    window.onload = function () {
        checkLoginState()
    }

    function fclogout() {
        FB.logout(function (response) {
        });
    }

    function checkLoginState() {

        FB.getLoginStatus(function (response) {

            if (response.status === 'connected') {
                alert('利用者はFacebookにログインしていて、アプリを認証している')

                FB.api('/me', {
                    fields: 'email,name'
                }, function (response) {
                    console.log(response);
                    $('#Name').val(response.name)
                    $('#Email').val(response.email)
                    $('#UserID').val(response.id)
                });
            }
            else if (response.status === 'authorization_expired') {
                alert('利用者は以前アプリにログインしていたが、データにアクセスするための認証期限が切れている')
                FB.login()
            }
            else if (response.status === 'not_authorized') {
                alert('利用者はFacebookにログインしているが、アプリを認証していない')
                FB.login()
            }
            else if (response.status === 'unknown') {
                alert('利用者はFacebookにログインしていないか、アプリから明示的にログアウトしている')
                FB.login()
            }
            else {
                alert('エラー')
            }
        });
    }
</script>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}